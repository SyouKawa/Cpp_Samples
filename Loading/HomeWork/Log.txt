/*move-out* *2017-06-04*/
//multi_result();
//print_diamond_Basic();
//print_diamond_1();
//print_diamond_2();
//print_diamond_3();
//public_elements_1A2();
//public_elements_group();
//sort_4_max_and_then();
//sort_6_abs_min();
//No7_diff_or();
//beyond_half();
//system("pause");

/*move-out* *2017-06-06*/
//lower2upper();
//int num_count(0),alpha_count(0),other_count(0);
//sign_1(num_count,alpha_count,other_count);
//sign_2(num_count, alpha_count, other_count);
//dec_2_bin();
//bin_2_dec();
//dec_2_hex();
//hex_2_dec();
//minus_bin();
//No5_101();
//Day_th();
//year2year_day_sum();
//what_Day_is_it_today();
//day_2_date();
//month_Calendar();
//The_Calendar();


/*move-out* *2017-06-07*/
/*char src[50] ="Coding ";
char str[50] = {0};

char smaller[] = "Catch sth.";
char bigger[] = "Fun me.";
char equal[] = "Coding ";*/

//mystrcpy(src, str);
/*int result = 0;
result = mystrcmp(src,smaller);
cout << result << endl;
result = mystrcmp(src, equal);
cout << result << endl;
result = mystrcmp(src, bigger);
cout << result << endl;

mystrcat(src,bigger);*/
/*size_t length(0);
length=mystrlen(src);
cout << length << endl;

char input[] = "    hello         world  how   are   you    ";
int count =  split_input(input);

puts("\n\n");

char reverse[] = "I    am  a  student";
reverses(reverse);*/


/*move-out 20170608*/
//char num_alp[] = "h1ell2o3";
	//char space_and_other[] = " How areyou.";
	//char num[] = "122233344555666";
	//char *language[] = { "Java","C","C++","Python","Javascript","HTML","CSS" };

	//puts(num_alp_divide(num_alp));
	//char*new_str_pointer;
	//space_exchange(space_and_other);
	//del_repetition(num);
	//del();
	//del_space();
	//char **the_max = language;
	//char **the_min = language+1;
	//big(language, 7 , the_max, the_min);
	//aaa();

/*move-out 2017-06-09*/
/*int x=0, int y=0;
printf("Please input the terminal point you want: ");
cin >> x >> y;

int count = Path_cacl(x,y);

printf("The number of Path is: %d\n", count);*/

/*move-out 20170611-1*/
//int len = 0;
//link_list *new_list = CreateList_Front();
//output_link_list(new_list);
//len=length(new_list);
//link_list middle_node;
//middle_node=middle(new_list, middle_node);
//printf("%c\n", middle_node.data);

//new_list=reverse(new_list);
//output_link_list(new_list);

//printf("The length of this list is: %d. \n",len);

//new_list = CreateList_End();
//output_link_list(new_list);

//printf("Please input the data you wanna delete: ");
//char deldata;

//for (int i = 0; i < 3; i++) {
//	cin >> deldata;
//	new_list = delete_node(new_list, deldata);
//	output_link_list(new_list);
//}

/*move-out 20170611-2*/
/*int number = 0;
link_list * number1=NULL;
link_list * number2 = NULL;
char*num_type = "int";

number1 = get_list_in_order(number1);
number2 = get_list_in_order(number2);
number1=list_together(number1, number2);
output_link_list(number1,num_type);
link_list last_4_node=last_4(number1);
printf("The node is: %d.\n", last_4_node.data);*/

/*move-out  2017-06-12*/
//int count = 0;
//printf("Please input the number of Students you wanna save: ");
//scanf("%d", &count);
//Students *student_list = NULL;
//FILE *input = fopen("Student_info.txt","r");
//
//for (int i=count;i!=0;i--) {
//	add_element(&student_list, input);
//}
//fclose(input);
//print_students_data(student_list);
//puts("\n");
//Students*temp = student_list;
//Students* student_array = (Students*)malloc(sizeof(Students) * 5);
//memset(student_array, 0, 5 * sizeof(Students));
//for (int i=0;student_list!=NULL;i++,student_list=student_list->next) {
//	memcpy(student_array + i, student_list, sizeof(Students));
//}
//student_list = temp;
//Bubble_sum(student_array,5);
//for (int i=0;i<5;i++) {
//	student_array[i].output();
//}

//int Math_average = 0, English_average = 0, Chinese_average = 0;
//Math_average = average_score(student_list, 0);
//English_average = average_score(student_list, 1);
//Chinese_average = average_score(student_list, 2);
//printf("The average-score of Math=%d   English=%d    Chinese=%d\n", Math_average,English_average,Chinese_average);



//void main() {
//	
//	// FILE *input = fopen("The_Holy_Bible.txt", "r+");
//	 print_a_line();
//	//fclose(input);
//
//	//link_list *link2 = NULL;
//	//divide_list(&new_list, &link2);
//	//output_link_list(new_list, new_list_type);
//	//output_link_list(link2, new_list_type);
//
//	getchar();
//	getchar();
//}

/*move-out  2017-06-12*/
//int count = 0;
//printf("Please input the number of Students you wanna save: ");
//scanf("%d", &count);
//Students *student_list = NULL;
//FILE *input = fopen("Student_info.txt","r");
//
//for (int i=count;i!=0;i--) {
//	add_element(&student_list, input);
//}
//fclose(input);
//print_students_data(student_list);
//puts("\n");
//Students*temp = student_list;
//Students* student_array = (Students*)malloc(sizeof(Students) * 5);
//memset(student_array, 0, 5 * sizeof(Students));
//for (int i=0;student_list!=NULL;i++,student_list=student_list->next) {
//	memcpy(student_array + i, student_list, sizeof(Students));
//}
//student_list = temp;
//Bubble_sum(student_array,5);
//for (int i=0;i<5;i++) {
//	student_array[i].output();
//}

//int Math_average = 0, English_average = 0, Chinese_average = 0;
//Math_average = average_score(student_list, 0);
//English_average = average_score(student_list, 1);
//Chinese_average = average_score(student_list, 2);
//printf("The average-score of Math=%d   English=%d    Chinese=%d\n", Math_average,English_average,Chinese_average);

/*move-out 20170614*/
//FILE *in, *out;//char ch, infile[10], outfile[10];//printf("Enter the infile name:\n");//scanf("%s", infile);//printf("Enter the outfile name:\n");//scanf("%s", outfile);//if ((in = fopen(infile, "r")) == NULL)//{//	printf("cannot open infile\n");//	exit(0);//}//if ((out = fopen(outfile, "r+")) == NULL)//{//	printf("cannot open outfile\n");//	exit(0);//}//while (!feof(in)) {//	char c;//	c = fgetc(in);//	if (c != ' ') fputc(c, out);//	else fputc(',', out);//}////int check = 0;//char arr[4] = { 0 };//check = fseek(in, -4, SEEK_CUR);//if (check != 0) {//	perror("fseek");//}//fgets(arr, sizeof(arr), in);//读的是字节总量，不是读的字节个数。所以不用除sizeof(int/char);//puts(arr);////fclose(in);//fclose(out);